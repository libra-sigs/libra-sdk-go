// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/get_with_proof.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// This API is used to update the client to the latest ledger version and
// optionally also request 1..n other pieces of data.  This allows for batch
// queries.  All queries return proofs that a client should check to validate
// the data.
//
// Note that if a client only wishes to update to the latest LedgerInfo and
// receive the proof that this latest ledger extends the client_known_version
// ledger the client had, they can simply set the requested_items to an empty
// list.
type UpdateToLatestLedgerRequest struct {
	// This is the version the client already trusts. Usually the client should
	// set this to the version it obtained the last time it synced with the
	// chain. If this is the first time ever the client sends a request, it must
	// use the waypoint hard-coded in its software.
	ClientKnownVersion uint64 `protobuf:"varint,1,opt,name=client_known_version,json=clientKnownVersion,proto3" json:"client_known_version,omitempty"`
	// The items for which we are requesting data in this API call.
	RequestedItems       []*RequestItem `protobuf:"bytes,2,rep,name=requested_items,json=requestedItems,proto3" json:"requested_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateToLatestLedgerRequest) Reset()         { *m = UpdateToLatestLedgerRequest{} }
func (m *UpdateToLatestLedgerRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateToLatestLedgerRequest) ProtoMessage()    {}
func (*UpdateToLatestLedgerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{0}
}

func (m *UpdateToLatestLedgerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateToLatestLedgerRequest.Unmarshal(m, b)
}
func (m *UpdateToLatestLedgerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateToLatestLedgerRequest.Marshal(b, m, deterministic)
}
func (m *UpdateToLatestLedgerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateToLatestLedgerRequest.Merge(m, src)
}
func (m *UpdateToLatestLedgerRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateToLatestLedgerRequest.Size(m)
}
func (m *UpdateToLatestLedgerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateToLatestLedgerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateToLatestLedgerRequest proto.InternalMessageInfo

func (m *UpdateToLatestLedgerRequest) GetClientKnownVersion() uint64 {
	if m != nil {
		return m.ClientKnownVersion
	}
	return 0
}

func (m *UpdateToLatestLedgerRequest) GetRequestedItems() []*RequestItem {
	if m != nil {
		return m.RequestedItems
	}
	return nil
}

type RequestItem struct {
	// Types that are valid to be assigned to RequestedItems:
	//	*RequestItem_GetAccountStateRequest
	//	*RequestItem_GetAccountTransactionBySequenceNumberRequest
	//	*RequestItem_GetEventsByEventAccessPathRequest
	//	*RequestItem_GetTransactionsRequest
	RequestedItems       isRequestItem_RequestedItems `protobuf_oneof:"requested_items"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *RequestItem) Reset()         { *m = RequestItem{} }
func (m *RequestItem) String() string { return proto.CompactTextString(m) }
func (*RequestItem) ProtoMessage()    {}
func (*RequestItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{1}
}

func (m *RequestItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestItem.Unmarshal(m, b)
}
func (m *RequestItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestItem.Marshal(b, m, deterministic)
}
func (m *RequestItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestItem.Merge(m, src)
}
func (m *RequestItem) XXX_Size() int {
	return xxx_messageInfo_RequestItem.Size(m)
}
func (m *RequestItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestItem.DiscardUnknown(m)
}

var xxx_messageInfo_RequestItem proto.InternalMessageInfo

type isRequestItem_RequestedItems interface {
	isRequestItem_RequestedItems()
}

type RequestItem_GetAccountStateRequest struct {
	GetAccountStateRequest *GetAccountStateRequest `protobuf:"bytes,1,opt,name=get_account_state_request,json=getAccountStateRequest,proto3,oneof"`
}

type RequestItem_GetAccountTransactionBySequenceNumberRequest struct {
	GetAccountTransactionBySequenceNumberRequest *GetAccountTransactionBySequenceNumberRequest `protobuf:"bytes,2,opt,name=get_account_transaction_by_sequence_number_request,json=getAccountTransactionBySequenceNumberRequest,proto3,oneof"`
}

type RequestItem_GetEventsByEventAccessPathRequest struct {
	GetEventsByEventAccessPathRequest *GetEventsByEventAccessPathRequest `protobuf:"bytes,3,opt,name=get_events_by_event_access_path_request,json=getEventsByEventAccessPathRequest,proto3,oneof"`
}

type RequestItem_GetTransactionsRequest struct {
	GetTransactionsRequest *GetTransactionsRequest `protobuf:"bytes,4,opt,name=get_transactions_request,json=getTransactionsRequest,proto3,oneof"`
}

func (*RequestItem_GetAccountStateRequest) isRequestItem_RequestedItems() {}

func (*RequestItem_GetAccountTransactionBySequenceNumberRequest) isRequestItem_RequestedItems() {}

func (*RequestItem_GetEventsByEventAccessPathRequest) isRequestItem_RequestedItems() {}

func (*RequestItem_GetTransactionsRequest) isRequestItem_RequestedItems() {}

func (m *RequestItem) GetRequestedItems() isRequestItem_RequestedItems {
	if m != nil {
		return m.RequestedItems
	}
	return nil
}

func (m *RequestItem) GetGetAccountStateRequest() *GetAccountStateRequest {
	if x, ok := m.GetRequestedItems().(*RequestItem_GetAccountStateRequest); ok {
		return x.GetAccountStateRequest
	}
	return nil
}

func (m *RequestItem) GetGetAccountTransactionBySequenceNumberRequest() *GetAccountTransactionBySequenceNumberRequest {
	if x, ok := m.GetRequestedItems().(*RequestItem_GetAccountTransactionBySequenceNumberRequest); ok {
		return x.GetAccountTransactionBySequenceNumberRequest
	}
	return nil
}

func (m *RequestItem) GetGetEventsByEventAccessPathRequest() *GetEventsByEventAccessPathRequest {
	if x, ok := m.GetRequestedItems().(*RequestItem_GetEventsByEventAccessPathRequest); ok {
		return x.GetEventsByEventAccessPathRequest
	}
	return nil
}

func (m *RequestItem) GetGetTransactionsRequest() *GetTransactionsRequest {
	if x, ok := m.GetRequestedItems().(*RequestItem_GetTransactionsRequest); ok {
		return x.GetTransactionsRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RequestItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RequestItem_GetAccountStateRequest)(nil),
		(*RequestItem_GetAccountTransactionBySequenceNumberRequest)(nil),
		(*RequestItem_GetEventsByEventAccessPathRequest)(nil),
		(*RequestItem_GetTransactionsRequest)(nil),
	}
}

// Response from getting latest ledger
type UpdateToLatestLedgerResponse struct {
	// Responses to the queries posed by the requests. The proofs generated will
	// be relative to the version of the latest ledger provided below.
	ResponseItems []*ResponseItem `protobuf:"bytes,1,rep,name=response_items,json=responseItems,proto3" json:"response_items,omitempty"`
	// The latest ledger info this node has. It will come with at least 2f+1
	// validator signatures as well as a proof that shows the latest ledger
	// extends the old ledger the client had.
	LedgerInfoWithSigs *LedgerInfoWithSignatures `protobuf:"bytes,2,opt,name=ledger_info_with_sigs,json=ledgerInfoWithSigs,proto3" json:"ledger_info_with_sigs,omitempty"`
	// A proof for Validator changes from what the client last knew. This is
	// used to inform the client of validator changes from the client's last
	// known version until the current version.
	ValidatorChangeProof *ValidatorChangeProof `protobuf:"bytes,3,opt,name=validator_change_proof,json=validatorChangeProof,proto3" json:"validator_change_proof,omitempty"`
	// A proof that shows the latest ledger accumulator is consistent with the
	// old accumulator at "client_known_version".
	LedgerConsistencyProof *AccumulatorConsistencyProof `protobuf:"bytes,4,opt,name=ledger_consistency_proof,json=ledgerConsistencyProof,proto3" json:"ledger_consistency_proof,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                     `json:"-"`
	XXX_unrecognized       []byte                       `json:"-"`
	XXX_sizecache          int32                        `json:"-"`
}

func (m *UpdateToLatestLedgerResponse) Reset()         { *m = UpdateToLatestLedgerResponse{} }
func (m *UpdateToLatestLedgerResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateToLatestLedgerResponse) ProtoMessage()    {}
func (*UpdateToLatestLedgerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{2}
}

func (m *UpdateToLatestLedgerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateToLatestLedgerResponse.Unmarshal(m, b)
}
func (m *UpdateToLatestLedgerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateToLatestLedgerResponse.Marshal(b, m, deterministic)
}
func (m *UpdateToLatestLedgerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateToLatestLedgerResponse.Merge(m, src)
}
func (m *UpdateToLatestLedgerResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateToLatestLedgerResponse.Size(m)
}
func (m *UpdateToLatestLedgerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateToLatestLedgerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateToLatestLedgerResponse proto.InternalMessageInfo

func (m *UpdateToLatestLedgerResponse) GetResponseItems() []*ResponseItem {
	if m != nil {
		return m.ResponseItems
	}
	return nil
}

func (m *UpdateToLatestLedgerResponse) GetLedgerInfoWithSigs() *LedgerInfoWithSignatures {
	if m != nil {
		return m.LedgerInfoWithSigs
	}
	return nil
}

func (m *UpdateToLatestLedgerResponse) GetValidatorChangeProof() *ValidatorChangeProof {
	if m != nil {
		return m.ValidatorChangeProof
	}
	return nil
}

func (m *UpdateToLatestLedgerResponse) GetLedgerConsistencyProof() *AccumulatorConsistencyProof {
	if m != nil {
		return m.LedgerConsistencyProof
	}
	return nil
}

// Individual response items to the queries posed by the requests
type ResponseItem struct {
	// Types that are valid to be assigned to ResponseItems:
	//	*ResponseItem_GetAccountStateResponse
	//	*ResponseItem_GetAccountTransactionBySequenceNumberResponse
	//	*ResponseItem_GetEventsByEventAccessPathResponse
	//	*ResponseItem_GetTransactionsResponse
	ResponseItems        isResponseItem_ResponseItems `protobuf_oneof:"response_items"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ResponseItem) Reset()         { *m = ResponseItem{} }
func (m *ResponseItem) String() string { return proto.CompactTextString(m) }
func (*ResponseItem) ProtoMessage()    {}
func (*ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{3}
}

func (m *ResponseItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseItem.Unmarshal(m, b)
}
func (m *ResponseItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseItem.Marshal(b, m, deterministic)
}
func (m *ResponseItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseItem.Merge(m, src)
}
func (m *ResponseItem) XXX_Size() int {
	return xxx_messageInfo_ResponseItem.Size(m)
}
func (m *ResponseItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseItem.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseItem proto.InternalMessageInfo

type isResponseItem_ResponseItems interface {
	isResponseItem_ResponseItems()
}

type ResponseItem_GetAccountStateResponse struct {
	GetAccountStateResponse *GetAccountStateResponse `protobuf:"bytes,3,opt,name=get_account_state_response,json=getAccountStateResponse,proto3,oneof"`
}

type ResponseItem_GetAccountTransactionBySequenceNumberResponse struct {
	GetAccountTransactionBySequenceNumberResponse *GetAccountTransactionBySequenceNumberResponse `protobuf:"bytes,4,opt,name=get_account_transaction_by_sequence_number_response,json=getAccountTransactionBySequenceNumberResponse,proto3,oneof"`
}

type ResponseItem_GetEventsByEventAccessPathResponse struct {
	GetEventsByEventAccessPathResponse *GetEventsByEventAccessPathResponse `protobuf:"bytes,5,opt,name=get_events_by_event_access_path_response,json=getEventsByEventAccessPathResponse,proto3,oneof"`
}

type ResponseItem_GetTransactionsResponse struct {
	GetTransactionsResponse *GetTransactionsResponse `protobuf:"bytes,6,opt,name=get_transactions_response,json=getTransactionsResponse,proto3,oneof"`
}

func (*ResponseItem_GetAccountStateResponse) isResponseItem_ResponseItems() {}

func (*ResponseItem_GetAccountTransactionBySequenceNumberResponse) isResponseItem_ResponseItems() {}

func (*ResponseItem_GetEventsByEventAccessPathResponse) isResponseItem_ResponseItems() {}

func (*ResponseItem_GetTransactionsResponse) isResponseItem_ResponseItems() {}

func (m *ResponseItem) GetResponseItems() isResponseItem_ResponseItems {
	if m != nil {
		return m.ResponseItems
	}
	return nil
}

func (m *ResponseItem) GetGetAccountStateResponse() *GetAccountStateResponse {
	if x, ok := m.GetResponseItems().(*ResponseItem_GetAccountStateResponse); ok {
		return x.GetAccountStateResponse
	}
	return nil
}

func (m *ResponseItem) GetGetAccountTransactionBySequenceNumberResponse() *GetAccountTransactionBySequenceNumberResponse {
	if x, ok := m.GetResponseItems().(*ResponseItem_GetAccountTransactionBySequenceNumberResponse); ok {
		return x.GetAccountTransactionBySequenceNumberResponse
	}
	return nil
}

func (m *ResponseItem) GetGetEventsByEventAccessPathResponse() *GetEventsByEventAccessPathResponse {
	if x, ok := m.GetResponseItems().(*ResponseItem_GetEventsByEventAccessPathResponse); ok {
		return x.GetEventsByEventAccessPathResponse
	}
	return nil
}

func (m *ResponseItem) GetGetTransactionsResponse() *GetTransactionsResponse {
	if x, ok := m.GetResponseItems().(*ResponseItem_GetTransactionsResponse); ok {
		return x.GetTransactionsResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResponseItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResponseItem_GetAccountStateResponse)(nil),
		(*ResponseItem_GetAccountTransactionBySequenceNumberResponse)(nil),
		(*ResponseItem_GetEventsByEventAccessPathResponse)(nil),
		(*ResponseItem_GetTransactionsResponse)(nil),
	}
}

// Gets latest state for an account.
type GetAccountStateRequest struct {
	// Account for which we are fetching the state.
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountStateRequest) Reset()         { *m = GetAccountStateRequest{} }
func (m *GetAccountStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountStateRequest) ProtoMessage()    {}
func (*GetAccountStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{4}
}

func (m *GetAccountStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountStateRequest.Unmarshal(m, b)
}
func (m *GetAccountStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountStateRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountStateRequest.Merge(m, src)
}
func (m *GetAccountStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountStateRequest.Size(m)
}
func (m *GetAccountStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountStateRequest proto.InternalMessageInfo

func (m *GetAccountStateRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

// State information returned by a get account state query.
type GetAccountStateResponse struct {
	// Blob value representing the account state together with proof the client
	// can utilize to verify it.
	AccountStateWithProof *AccountStateWithProof `protobuf:"bytes,1,opt,name=account_state_with_proof,json=accountStateWithProof,proto3" json:"account_state_with_proof,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *GetAccountStateResponse) Reset()         { *m = GetAccountStateResponse{} }
func (m *GetAccountStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccountStateResponse) ProtoMessage()    {}
func (*GetAccountStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{5}
}

func (m *GetAccountStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountStateResponse.Unmarshal(m, b)
}
func (m *GetAccountStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountStateResponse.Marshal(b, m, deterministic)
}
func (m *GetAccountStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountStateResponse.Merge(m, src)
}
func (m *GetAccountStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetAccountStateResponse.Size(m)
}
func (m *GetAccountStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountStateResponse proto.InternalMessageInfo

func (m *GetAccountStateResponse) GetAccountStateWithProof() *AccountStateWithProof {
	if m != nil {
		return m.AccountStateWithProof
	}
	return nil
}

// -----------------------------------------------------------------------------
// ---------------- Get single transaction by account + sequence number
// -----------------------------------------------------------------------------
// Get transactions that altered an account - this includes both sent and
// received. A user of this should check that the data returned matches what
// they expect.  As an example, a potential attack vector would be something
// like the following: Alice is buying an apple from Bob. Alice's phone signs a
// transaction X with sequence number N that pays coins to Bob. Alice transmits
// this signature to Bob's payment terminal which then submits the transaction
// and checks its status to see if Alice can be given the apple. However, as Bob
// is doing this Alice constructs a second transaction X' also with sequence
// number N. Alice gets that transaction inserted in the blockchain. If Bob
// isn't thoughtful about how he uses this API he may assume that if he asks for
// the N'th transaction on Alice's account that when the API returns that this
// means the transaction has gone through. The point here is that one should be
// careful in reading too much into "transaction X is on the chain" and focus on
// the logs, which tell you what the transaction did.
//
// If a client submitted a transaction, they should also verify that the hash of
// the returned transaction matches what they submitted.  As an example, if a
// client has two wallets that share the same account, they may both submit a
// transaction at the same sequence number and only one will be committed.  A
// client should never assume that if they receive the response that this
// transaction was included that it means that this is definitely the
// transaction that was submitted.  They should check that the hash matches what
// they sent
type GetAccountTransactionBySequenceNumberRequest struct {
	// Account for which to query transactions
	Account        []byte `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	SequenceNumber uint64 `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	// Set to true to fetch events for the transaction at this version
	FetchEvents          bool     `protobuf:"varint,3,opt,name=fetch_events,json=fetchEvents,proto3" json:"fetch_events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountTransactionBySequenceNumberRequest) Reset() {
	*m = GetAccountTransactionBySequenceNumberRequest{}
}
func (m *GetAccountTransactionBySequenceNumberRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetAccountTransactionBySequenceNumberRequest) ProtoMessage() {}
func (*GetAccountTransactionBySequenceNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{6}
}

func (m *GetAccountTransactionBySequenceNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountTransactionBySequenceNumberRequest.Unmarshal(m, b)
}
func (m *GetAccountTransactionBySequenceNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountTransactionBySequenceNumberRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountTransactionBySequenceNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountTransactionBySequenceNumberRequest.Merge(m, src)
}
func (m *GetAccountTransactionBySequenceNumberRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountTransactionBySequenceNumberRequest.Size(m)
}
func (m *GetAccountTransactionBySequenceNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountTransactionBySequenceNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountTransactionBySequenceNumberRequest proto.InternalMessageInfo

func (m *GetAccountTransactionBySequenceNumberRequest) GetAccount() []byte {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *GetAccountTransactionBySequenceNumberRequest) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *GetAccountTransactionBySequenceNumberRequest) GetFetchEvents() bool {
	if m != nil {
		return m.FetchEvents
	}
	return false
}

// Transaction information for transactions requested by
// GetAccountTransactionsRequest
type GetAccountTransactionBySequenceNumberResponse struct {
	// When the transaction requested is committed, return the committed
	// transaction with proof.
	TransactionWithProof *TransactionWithProof `protobuf:"bytes,2,opt,name=transaction_with_proof,json=transactionWithProof,proto3" json:"transaction_with_proof,omitempty"`
	// When the transaction requested is not committed, we give a proof that
	// shows the current sequence number is smaller than what would have been if
	// the transaction was committed.
	ProofOfCurrentSequenceNumber *AccountStateWithProof `protobuf:"bytes,3,opt,name=proof_of_current_sequence_number,json=proofOfCurrentSequenceNumber,proto3" json:"proof_of_current_sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}               `json:"-"`
	XXX_unrecognized             []byte                 `json:"-"`
	XXX_sizecache                int32                  `json:"-"`
}

func (m *GetAccountTransactionBySequenceNumberResponse) Reset() {
	*m = GetAccountTransactionBySequenceNumberResponse{}
}
func (m *GetAccountTransactionBySequenceNumberResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetAccountTransactionBySequenceNumberResponse) ProtoMessage() {}
func (*GetAccountTransactionBySequenceNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{7}
}

func (m *GetAccountTransactionBySequenceNumberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountTransactionBySequenceNumberResponse.Unmarshal(m, b)
}
func (m *GetAccountTransactionBySequenceNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountTransactionBySequenceNumberResponse.Marshal(b, m, deterministic)
}
func (m *GetAccountTransactionBySequenceNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountTransactionBySequenceNumberResponse.Merge(m, src)
}
func (m *GetAccountTransactionBySequenceNumberResponse) XXX_Size() int {
	return xxx_messageInfo_GetAccountTransactionBySequenceNumberResponse.Size(m)
}
func (m *GetAccountTransactionBySequenceNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountTransactionBySequenceNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountTransactionBySequenceNumberResponse proto.InternalMessageInfo

func (m *GetAccountTransactionBySequenceNumberResponse) GetTransactionWithProof() *TransactionWithProof {
	if m != nil {
		return m.TransactionWithProof
	}
	return nil
}

func (m *GetAccountTransactionBySequenceNumberResponse) GetProofOfCurrentSequenceNumber() *AccountStateWithProof {
	if m != nil {
		return m.ProofOfCurrentSequenceNumber
	}
	return nil
}

// Get events that exist on an event access path.  In the current world,
// a user may specify events that were received, events that were sent, or any
// event that modifies their account
type GetEventsByEventAccessPathRequest struct {
	AccessPath *AccessPath `protobuf:"bytes,1,opt,name=access_path,json=accessPath,proto3" json:"access_path,omitempty"`
	// The sequence number of the event to start with for this query. Use a
	// sequence number of MAX_INT to represent the latest.
	StartEventSeqNum uint64 `protobuf:"varint,2,opt,name=start_event_seq_num,json=startEventSeqNum,proto3" json:"start_event_seq_num,omitempty"`
	// If ascending is true this query will return up to `limit` events that were
	// emitted after `start_event_seq_num`. Otherwise it will return up to `limit`
	// events before the offset. Both cases are inclusive.
	Ascending bool `protobuf:"varint,3,opt,name=ascending,proto3" json:"ascending,omitempty"`
	// Limit number of results
	Limit                uint64   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventsByEventAccessPathRequest) Reset()         { *m = GetEventsByEventAccessPathRequest{} }
func (m *GetEventsByEventAccessPathRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventsByEventAccessPathRequest) ProtoMessage()    {}
func (*GetEventsByEventAccessPathRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{8}
}

func (m *GetEventsByEventAccessPathRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsByEventAccessPathRequest.Unmarshal(m, b)
}
func (m *GetEventsByEventAccessPathRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsByEventAccessPathRequest.Marshal(b, m, deterministic)
}
func (m *GetEventsByEventAccessPathRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsByEventAccessPathRequest.Merge(m, src)
}
func (m *GetEventsByEventAccessPathRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventsByEventAccessPathRequest.Size(m)
}
func (m *GetEventsByEventAccessPathRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsByEventAccessPathRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsByEventAccessPathRequest proto.InternalMessageInfo

func (m *GetEventsByEventAccessPathRequest) GetAccessPath() *AccessPath {
	if m != nil {
		return m.AccessPath
	}
	return nil
}

func (m *GetEventsByEventAccessPathRequest) GetStartEventSeqNum() uint64 {
	if m != nil {
		return m.StartEventSeqNum
	}
	return 0
}

func (m *GetEventsByEventAccessPathRequest) GetAscending() bool {
	if m != nil {
		return m.Ascending
	}
	return false
}

func (m *GetEventsByEventAccessPathRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetEventsByEventAccessPathResponse struct {
	// Returns an event and proof of each of the events in the request. The first
	// element of proofs will be the closest to `start_event_seq_num`.
	EventsWithProof []*EventWithProof `protobuf:"bytes,1,rep,name=events_with_proof,json=eventsWithProof,proto3" json:"events_with_proof,omitempty"`
	// If the number of events returned is less than `limit` for an ascending
	// query or if start_event_seq_num > the latest seq_num for a descending
	// query, returns the state of the account containing the given access path
	// in the latest state. This allows the client to verify that there are in
	// fact no extra events.
	//
	// The LedgerInfoWithSignatures which is on the main
	// UpdateToLatestLedgerResponse can be used to validate this.
	ProofOfLatestEvent   *AccountStateWithProof `protobuf:"bytes,2,opt,name=proof_of_latest_event,json=proofOfLatestEvent,proto3" json:"proof_of_latest_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetEventsByEventAccessPathResponse) Reset()         { *m = GetEventsByEventAccessPathResponse{} }
func (m *GetEventsByEventAccessPathResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventsByEventAccessPathResponse) ProtoMessage()    {}
func (*GetEventsByEventAccessPathResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{9}
}

func (m *GetEventsByEventAccessPathResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsByEventAccessPathResponse.Unmarshal(m, b)
}
func (m *GetEventsByEventAccessPathResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsByEventAccessPathResponse.Marshal(b, m, deterministic)
}
func (m *GetEventsByEventAccessPathResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsByEventAccessPathResponse.Merge(m, src)
}
func (m *GetEventsByEventAccessPathResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventsByEventAccessPathResponse.Size(m)
}
func (m *GetEventsByEventAccessPathResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsByEventAccessPathResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsByEventAccessPathResponse proto.InternalMessageInfo

func (m *GetEventsByEventAccessPathResponse) GetEventsWithProof() []*EventWithProof {
	if m != nil {
		return m.EventsWithProof
	}
	return nil
}

func (m *GetEventsByEventAccessPathResponse) GetProofOfLatestEvent() *AccountStateWithProof {
	if m != nil {
		return m.ProofOfLatestEvent
	}
	return nil
}

// Get up to limit transactions starting from start_version.
type GetTransactionsRequest struct {
	// The version of the transaction to start with for this query.  Use a version
	// of MAX_INT to represent the latest.
	StartVersion uint64 `protobuf:"varint,1,opt,name=start_version,json=startVersion,proto3" json:"start_version,omitempty"`
	// Limit number of results
	Limit uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Set to true to fetch events for the transaction at each version
	FetchEvents          bool     `protobuf:"varint,3,opt,name=fetch_events,json=fetchEvents,proto3" json:"fetch_events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionsRequest) Reset()         { *m = GetTransactionsRequest{} }
func (m *GetTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsRequest) ProtoMessage()    {}
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{10}
}

func (m *GetTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionsRequest.Unmarshal(m, b)
}
func (m *GetTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionsRequest.Merge(m, src)
}
func (m *GetTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionsRequest.Size(m)
}
func (m *GetTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionsRequest proto.InternalMessageInfo

func (m *GetTransactionsRequest) GetStartVersion() uint64 {
	if m != nil {
		return m.StartVersion
	}
	return 0
}

func (m *GetTransactionsRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetTransactionsRequest) GetFetchEvents() bool {
	if m != nil {
		return m.FetchEvents
	}
	return false
}

type GetTransactionsResponse struct {
	TxnListWithProof     *TransactionListWithProof `protobuf:"bytes,1,opt,name=txn_list_with_proof,json=txnListWithProof,proto3" json:"txn_list_with_proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetTransactionsResponse) Reset()         { *m = GetTransactionsResponse{} }
func (m *GetTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsResponse) ProtoMessage()    {}
func (*GetTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89ece04a5ecfd65, []int{11}
}

func (m *GetTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionsResponse.Unmarshal(m, b)
}
func (m *GetTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionsResponse.Marshal(b, m, deterministic)
}
func (m *GetTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionsResponse.Merge(m, src)
}
func (m *GetTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionsResponse.Size(m)
}
func (m *GetTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionsResponse proto.InternalMessageInfo

func (m *GetTransactionsResponse) GetTxnListWithProof() *TransactionListWithProof {
	if m != nil {
		return m.TxnListWithProof
	}
	return nil
}

func init() {
	proto.RegisterType((*UpdateToLatestLedgerRequest)(nil), "types.UpdateToLatestLedgerRequest")
	proto.RegisterType((*RequestItem)(nil), "types.RequestItem")
	proto.RegisterType((*UpdateToLatestLedgerResponse)(nil), "types.UpdateToLatestLedgerResponse")
	proto.RegisterType((*ResponseItem)(nil), "types.ResponseItem")
	proto.RegisterType((*GetAccountStateRequest)(nil), "types.GetAccountStateRequest")
	proto.RegisterType((*GetAccountStateResponse)(nil), "types.GetAccountStateResponse")
	proto.RegisterType((*GetAccountTransactionBySequenceNumberRequest)(nil), "types.GetAccountTransactionBySequenceNumberRequest")
	proto.RegisterType((*GetAccountTransactionBySequenceNumberResponse)(nil), "types.GetAccountTransactionBySequenceNumberResponse")
	proto.RegisterType((*GetEventsByEventAccessPathRequest)(nil), "types.GetEventsByEventAccessPathRequest")
	proto.RegisterType((*GetEventsByEventAccessPathResponse)(nil), "types.GetEventsByEventAccessPathResponse")
	proto.RegisterType((*GetTransactionsRequest)(nil), "types.GetTransactionsRequest")
	proto.RegisterType((*GetTransactionsResponse)(nil), "types.GetTransactionsResponse")
}

func init() { proto.RegisterFile("types/get_with_proof.proto", fileDescriptor_f89ece04a5ecfd65) }

var fileDescriptor_f89ece04a5ecfd65 = []byte{
	// 1021 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xcb, 0x6e, 0x1b, 0x37,
	0x14, 0xcd, 0xd8, 0x72, 0xda, 0x5e, 0x39, 0x7e, 0xd0, 0x2f, 0xd5, 0x51, 0x13, 0x7b, 0xba, 0x88,
	0x0b, 0x44, 0x76, 0x21, 0x67, 0xd5, 0xae, 0xac, 0xa0, 0x68, 0x82, 0x1a, 0x4e, 0x3a, 0x4e, 0x52,
	0x34, 0x48, 0x31, 0xa0, 0x66, 0xa8, 0x11, 0x91, 0x11, 0xa9, 0x90, 0x1c, 0x25, 0xda, 0x14, 0xe8,
	0xa6, 0xab, 0x2e, 0xbb, 0x2f, 0xd0, 0xaf, 0x28, 0xfa, 0x33, 0xdd, 0xf6, 0x17, 0xba, 0x2b, 0x86,
	0xa4, 0xe6, 0xe5, 0x49, 0x64, 0xad, 0x34, 0xe4, 0xb9, 0x2f, 0xde, 0x7b, 0x0e, 0x29, 0xd8, 0x57,
	0xd3, 0x31, 0x91, 0x27, 0x11, 0x51, 0xfe, 0x5b, 0xaa, 0x86, 0xfe, 0x58, 0x70, 0x3e, 0x38, 0x1e,
	0x0b, 0xae, 0x38, 0x5a, 0xd1, 0xd8, 0xfe, 0x9e, 0x31, 0xc1, 0x41, 0x40, 0xa4, 0xf4, 0xc7, 0x58,
	0x0d, 0x0d, 0xbe, 0x7f, 0x27, 0x03, 0x78, 0xc2, 0x94, 0x2f, 0x15, 0x56, 0xc4, 0xef, 0xc7, 0xbc,
	0x6f, 0x71, 0x64, 0x70, 0x32, 0x21, 0x4c, 0x49, 0xbb, 0x67, 0x83, 0xc5, 0x24, 0x8c, 0x88, 0xf0,
	0x29, 0x1b, 0x70, 0x0b, 0x6c, 0x1a, 0xa0, 0x90, 0x7f, 0x66, 0xab, 0x04, 0x66, 0x12, 0x07, 0x8a,
	0x72, 0x66, 0x81, 0xb6, 0x01, 0x26, 0x38, 0xa6, 0x21, 0x56, 0x5c, 0xf8, 0xc1, 0x10, 0xb3, 0x88,
	0x18, 0xd4, 0xfd, 0xcd, 0x81, 0xdb, 0xcf, 0xc7, 0x21, 0x56, 0xe4, 0x19, 0x3f, 0xc7, 0x8a, 0x48,
	0x75, 0xae, 0xb3, 0x79, 0xe4, 0x4d, 0x42, 0xa4, 0x42, 0x5f, 0xc2, 0x76, 0x10, 0x53, 0xc2, 0x94,
	0xff, 0x9a, 0xf1, 0xb7, 0xcc, 0x9f, 0x10, 0x21, 0x29, 0x67, 0x2d, 0xe7, 0xc0, 0x39, 0x6a, 0x78,
	0xc8, 0x60, 0xdf, 0xa5, 0xd0, 0x0b, 0x83, 0xa0, 0xaf, 0x61, 0x5d, 0x18, 0x67, 0x12, 0xfa, 0x54,
	0x91, 0x91, 0x6c, 0x2d, 0x1d, 0x2c, 0x1f, 0x35, 0xbb, 0xe8, 0x58, 0x57, 0x72, 0x6c, 0x43, 0x3f,
	0x56, 0x64, 0xe4, 0xad, 0x65, 0xa6, 0xe9, 0x52, 0xba, 0xff, 0x2d, 0x43, 0xb3, 0x80, 0xa3, 0x97,
	0xf0, 0x69, 0xda, 0xed, 0x72, 0xd7, 0xac, 0x8f, 0xae, 0xa1, 0xd9, 0xfd, 0xcc, 0x86, 0xfd, 0x96,
	0xa8, 0x33, 0x63, 0x76, 0x99, 0x5a, 0xd9, 0x28, 0x8f, 0x6e, 0x78, 0xbb, 0x51, 0x2d, 0x82, 0xfe,
	0x70, 0xa0, 0x5b, 0x0c, 0x5e, 0x68, 0x9d, 0xdf, 0x9f, 0xfa, 0x32, 0x35, 0x63, 0x01, 0xf1, 0x59,
	0x32, 0xea, 0x13, 0x91, 0x65, 0x5d, 0xd2, 0x59, 0x4f, 0xaf, 0x64, 0x7d, 0x96, 0xbb, 0xf7, 0xa6,
	0x97, 0xd6, 0xf9, 0x42, 0xfb, 0xe6, 0xb5, 0xdc, 0x8f, 0x16, 0xb0, 0x47, 0x3f, 0xc3, 0xbd, 0xb4,
	0x40, 0xc3, 0x89, 0xb4, 0x26, 0xfd, 0xe5, 0x17, 0xc8, 0x95, 0x55, 0xb5, 0xac, 0xab, 0x3a, 0xca,
	0xab, 0xfa, 0x46, 0x3b, 0xf5, 0xa6, 0xfa, 0xf7, 0x4c, 0x7b, 0x3c, 0xc5, 0x6a, 0x98, 0x97, 0x72,
	0x18, 0xcd, 0x33, 0x42, 0x3f, 0x42, 0x2b, 0xcd, 0x5f, 0x68, 0x8c, 0xcc, 0x12, 0x36, 0xaa, 0xcd,
	0x2f, 0x9c, 0x47, 0x96, 0x9b, 0x5f, 0x83, 0xf4, 0x36, 0xaf, 0xb0, 0xc4, 0xfd, 0x67, 0x09, 0xda,
	0xf5, 0x54, 0x94, 0x63, 0xce, 0x24, 0x41, 0x5f, 0xc1, 0x9a, 0xb0, 0xdf, 0x96, 0x58, 0x8e, 0x26,
	0xd6, 0x56, 0x46, 0x2c, 0x03, 0x6a, 0x66, 0xdd, 0x12, 0x85, 0x95, 0x44, 0x1e, 0xec, 0x14, 0x64,
	0x64, 0xe4, 0x2b, 0x69, 0x24, 0xed, 0x38, 0xef, 0xda, 0x10, 0x26, 0xe3, 0x63, 0x36, 0xe0, 0x3f,
	0x50, 0x35, 0xbc, 0xa4, 0x11, 0xc3, 0x2a, 0x11, 0x44, 0x7a, 0x28, 0xae, 0x22, 0x12, 0x7d, 0x0f,
	0xbb, 0x55, 0x55, 0x99, 0x2b, 0xc1, 0x4e, 0xe3, 0xb6, 0x0d, 0xfa, 0x62, 0x66, 0xf4, 0x50, 0xdb,
	0x3c, 0x4d, 0x4d, 0xbc, 0xed, 0x49, 0xcd, 0x2e, 0x7a, 0x05, 0x2d, 0x5b, 0x66, 0xc0, 0x99, 0xa4,
	0x52, 0x11, 0x16, 0x4c, 0x6d, 0x50, 0xd3, 0x71, 0xd7, 0x06, 0x3d, 0x0b, 0x82, 0x64, 0x94, 0xc4,
	0x3a, 0x40, 0x6e, 0x6a, 0x62, 0xef, 0x9a, 0x18, 0xd5, 0x7d, 0xf7, 0xd7, 0x06, 0xac, 0x16, 0x9b,
	0x84, 0x7e, 0x82, 0xfd, 0x3a, 0x79, 0x19, 0x0b, 0x7b, 0x8a, 0x3b, 0xef, 0xd3, 0x97, 0xb1, 0x7a,
	0x74, 0xc3, 0xdb, 0x8b, 0xea, 0x21, 0xf4, 0xa7, 0x03, 0xa7, 0x0b, 0x29, 0xcc, 0x26, 0x36, 0x27,
	0x7d, 0xb0, 0x98, 0xc4, 0xb2, 0x72, 0x3a, 0xd1, 0x22, 0x0e, 0xe8, 0x17, 0x07, 0x8e, 0xe6, 0xab,
	0xcc, 0x56, 0xb6, 0xa2, 0x2b, 0xfb, 0xe2, 0x1a, 0x32, 0xcb, 0xca, 0x71, 0xa3, 0xb9, 0x56, 0xe8,
	0x95, 0xb9, 0xe6, 0x2a, 0x42, 0xb3, 0x39, 0x6f, 0x56, 0xc7, 0x50, 0xd6, 0x53, 0x69, 0x0c, 0x75,
	0x50, 0x6f, 0xa3, 0xaa, 0x1b, 0xb7, 0x0b, 0xbb, 0xf5, 0xd7, 0x25, 0x6a, 0xc1, 0x47, 0x38, 0x0c,
	0x05, 0x91, 0x52, 0x5f, 0xaf, 0xab, 0xde, 0x6c, 0xe9, 0x8e, 0x61, 0xef, 0x3d, 0x14, 0x40, 0xcf,
	0xa1, 0x55, 0xa6, 0x50, 0xfe, 0x3a, 0xda, 0x4b, 0xba, 0x9d, 0xb3, 0x36, 0x73, 0x4f, 0x75, 0x64,
	0xf8, 0xba, 0x83, 0xeb, 0xb6, 0xdd, 0xdf, 0x1d, 0xb8, 0xbf, 0xc8, 0xfd, 0xaa, 0x8b, 0x37, 0xc6,
	0x59, 0xf1, 0x66, 0x89, 0xee, 0xc1, 0x7a, 0x85, 0x6d, 0x5a, 0xf8, 0x0d, 0x6f, 0x4d, 0x96, 0x22,
	0xa1, 0x43, 0x58, 0x1d, 0x10, 0x15, 0x0c, 0x2d, 0x1d, 0xb4, 0x06, 0x3e, 0xf6, 0x9a, 0x7a, 0xcf,
	0x4c, 0xd1, 0xfd, 0xd7, 0x81, 0xce, 0x42, 0x9c, 0x4c, 0x2f, 0x8a, 0x22, 0xf5, 0x0b, 0xdd, 0x59,
	0x2a, 0x5d, 0x14, 0x85, 0x58, 0x79, 0x73, 0xb6, 0x55, 0xcd, 0x2e, 0x0a, 0xe1, 0x40, 0x47, 0xf0,
	0xf9, 0xc0, 0x0f, 0x12, 0x21, 0x52, 0xc6, 0x56, 0x4f, 0xb8, 0x7c, 0x8d, 0xd6, 0xb7, 0x75, 0x94,
	0x27, 0x83, 0x87, 0x26, 0x46, 0xf9, 0x00, 0xee, 0xdf, 0x0e, 0x1c, 0xce, 0x7d, 0x4b, 0x50, 0x17,
	0x9a, 0x05, 0xb1, 0xd8, 0x89, 0x6f, 0xe6, 0x69, 0x67, 0xe6, 0x80, 0xb3, 0x6f, 0xd4, 0x81, 0x2d,
	0xa9, 0xb0, 0xb0, 0xb2, 0x4b, 0x4b, 0x4f, 0xab, 0xb6, 0x43, 0xd9, 0xd0, 0x90, 0xce, 0x76, 0x49,
	0xde, 0x5c, 0x24, 0x23, 0xd4, 0x86, 0x4f, 0xb0, 0x0c, 0x08, 0x0b, 0x29, 0x8b, 0xec, 0x4c, 0xf2,
	0x0d, 0xb4, 0x0d, 0x2b, 0x31, 0x1d, 0x51, 0xf3, 0x28, 0x35, 0x3c, 0xb3, 0x70, 0xff, 0x72, 0xc0,
	0x9d, 0xaf, 0x50, 0x74, 0x06, 0x9b, 0x56, 0xfa, 0x25, 0xd6, 0xa6, 0x0f, 0xcb, 0x8e, 0x3d, 0x83,
	0x76, 0xcd, 0x7b, 0xb6, 0x6e, 0xec, 0xf3, 0x61, 0x3c, 0x81, 0x9d, 0x6c, 0x18, 0xb1, 0x7e, 0xb9,
	0xcc, 0xb1, 0xec, 0x78, 0x3f, 0x3c, 0x01, 0x64, 0x27, 0x60, 0x9e, 0x3c, 0x9d, 0xca, 0x9d, 0x68,
	0x7d, 0xd6, 0xbc, 0x9b, 0xe8, 0x73, 0xb8, 0x65, 0xfa, 0x56, 0xfe, 0x23, 0xb6, 0xaa, 0x37, 0x67,
	0x7f, 0xc1, 0xb2, 0x7e, 0x2c, 0x15, 0xfa, 0x71, 0x1d, 0x6a, 0x53, 0xad, 0xf1, 0xba, 0x4b, 0x04,
	0x5d, 0xc0, 0x96, 0x7a, 0xc7, 0xfc, 0x98, 0x4a, 0x75, 0x55, 0xde, 0x77, 0xaf, 0x12, 0xf8, 0x9c,
	0xca, 0x42, 0xcb, 0x36, 0xd4, 0xbb, 0xf2, 0x4e, 0xef, 0xc1, 0xcb, 0x6e, 0x44, 0xd5, 0x30, 0xe9,
	0x1f, 0x07, 0x7c, 0x74, 0x12, 0xd3, 0xbe, 0xc0, 0x9d, 0xf4, 0x41, 0x9e, 0x7d, 0x86, 0xaf, 0x3b,
	0x11, 0x37, 0x8b, 0x13, 0x31, 0x0e, 0x4e, 0x74, 0x82, 0xfe, 0x4d, 0xfd, 0xaf, 0xf5, 0xf4, 0xff,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x45, 0x4b, 0x10, 0x8a, 0x0b, 0x00, 0x00,
}
