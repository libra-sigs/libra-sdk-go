// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/proof.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AccumulatorProof struct {
	// The siblings. The ones near the leaf are at the beginning of the list. The
	// placeholder nodes are represented by empty byte arrays, other nodes should
	// be exactly 32-bytes long.
	Siblings             [][]byte `protobuf:"bytes,1,rep,name=siblings,proto3" json:"siblings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccumulatorProof) Reset()         { *m = AccumulatorProof{} }
func (m *AccumulatorProof) String() string { return proto.CompactTextString(m) }
func (*AccumulatorProof) ProtoMessage()    {}
func (*AccumulatorProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf31625cfde882c, []int{0}
}

func (m *AccumulatorProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccumulatorProof.Unmarshal(m, b)
}
func (m *AccumulatorProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccumulatorProof.Marshal(b, m, deterministic)
}
func (m *AccumulatorProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccumulatorProof.Merge(m, src)
}
func (m *AccumulatorProof) XXX_Size() int {
	return xxx_messageInfo_AccumulatorProof.Size(m)
}
func (m *AccumulatorProof) XXX_DiscardUnknown() {
	xxx_messageInfo_AccumulatorProof.DiscardUnknown(m)
}

var xxx_messageInfo_AccumulatorProof proto.InternalMessageInfo

func (m *AccumulatorProof) GetSiblings() [][]byte {
	if m != nil {
		return m.Siblings
	}
	return nil
}

type SparseMerkleProof struct {
	// This proof can be used to authenticate whether a given leaf exists in the
	// tree or not. In Rust:
	//   - If this is `Some(HashValue, HashValue)`
	//     - If the first `HashValue` equals requested key, this is an inclusion
	//       proof and the second `HashValue` equals the hash of the
	//       corresponding account blob.
	//     - Otherwise this is a non-inclusion proof. The first `HashValue` is
	//       the only key that exists in the subtree and the second `HashValue`
	//       equals the hash of the corresponding account blob.
	//   - If this is `None`, this is also a non-inclusion proof which indicates
	//     the subtree is empty.
	//
	// In protobuf, this leaf field should either be
	//   - empty, which corresponds to None in the Rust structure.
	//   - exactly 64 bytes, which corresponds to Some<(HashValue, HashValue)>
	//     in the Rust structure.
	Leaf []byte `protobuf:"bytes,1,opt,name=leaf,proto3" json:"leaf,omitempty"`
	// The siblings. The ones near the leaf are at the beginning of the list. The
	// placeholder nodes are represented by empty byte arrays, other nodes should
	// be exactly 32-bytes long.
	Siblings             [][]byte `protobuf:"bytes,2,rep,name=siblings,proto3" json:"siblings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SparseMerkleProof) Reset()         { *m = SparseMerkleProof{} }
func (m *SparseMerkleProof) String() string { return proto.CompactTextString(m) }
func (*SparseMerkleProof) ProtoMessage()    {}
func (*SparseMerkleProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf31625cfde882c, []int{1}
}

func (m *SparseMerkleProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SparseMerkleProof.Unmarshal(m, b)
}
func (m *SparseMerkleProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SparseMerkleProof.Marshal(b, m, deterministic)
}
func (m *SparseMerkleProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SparseMerkleProof.Merge(m, src)
}
func (m *SparseMerkleProof) XXX_Size() int {
	return xxx_messageInfo_SparseMerkleProof.Size(m)
}
func (m *SparseMerkleProof) XXX_DiscardUnknown() {
	xxx_messageInfo_SparseMerkleProof.DiscardUnknown(m)
}

var xxx_messageInfo_SparseMerkleProof proto.InternalMessageInfo

func (m *SparseMerkleProof) GetLeaf() []byte {
	if m != nil {
		return m.Leaf
	}
	return nil
}

func (m *SparseMerkleProof) GetSiblings() [][]byte {
	if m != nil {
		return m.Siblings
	}
	return nil
}

type AccumulatorConsistencyProof struct {
	// The root hashes of the subtrees that represent new leaves. Note that none
	// of these hashes should be default hash.
	Subtrees             [][]byte `protobuf:"bytes,1,rep,name=subtrees,proto3" json:"subtrees,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccumulatorConsistencyProof) Reset()         { *m = AccumulatorConsistencyProof{} }
func (m *AccumulatorConsistencyProof) String() string { return proto.CompactTextString(m) }
func (*AccumulatorConsistencyProof) ProtoMessage()    {}
func (*AccumulatorConsistencyProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf31625cfde882c, []int{2}
}

func (m *AccumulatorConsistencyProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccumulatorConsistencyProof.Unmarshal(m, b)
}
func (m *AccumulatorConsistencyProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccumulatorConsistencyProof.Marshal(b, m, deterministic)
}
func (m *AccumulatorConsistencyProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccumulatorConsistencyProof.Merge(m, src)
}
func (m *AccumulatorConsistencyProof) XXX_Size() int {
	return xxx_messageInfo_AccumulatorConsistencyProof.Size(m)
}
func (m *AccumulatorConsistencyProof) XXX_DiscardUnknown() {
	xxx_messageInfo_AccumulatorConsistencyProof.DiscardUnknown(m)
}

var xxx_messageInfo_AccumulatorConsistencyProof proto.InternalMessageInfo

func (m *AccumulatorConsistencyProof) GetSubtrees() [][]byte {
	if m != nil {
		return m.Subtrees
	}
	return nil
}

type AccumulatorRangeProof struct {
	// The siblings on the left of the path from root to the first leaf. The ones
	// near the leaf are at the beginning of the list. The placeholder nodes are
	// represented by empty byte arrays, other nodes should be exactly 32-bytes
	// long.
	LeftSiblings [][]byte `protobuf:"bytes,1,rep,name=left_siblings,json=leftSiblings,proto3" json:"left_siblings,omitempty"`
	// The siblings on the right of the path from root to the last leaf. The ones
	// near the leaf are at the beginning of the list. The placeholder nodes are
	// represented by empty byte arrays, other nodes should be exactly 32-bytes
	// long.
	RightSiblings        [][]byte `protobuf:"bytes,2,rep,name=right_siblings,json=rightSiblings,proto3" json:"right_siblings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccumulatorRangeProof) Reset()         { *m = AccumulatorRangeProof{} }
func (m *AccumulatorRangeProof) String() string { return proto.CompactTextString(m) }
func (*AccumulatorRangeProof) ProtoMessage()    {}
func (*AccumulatorRangeProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf31625cfde882c, []int{3}
}

func (m *AccumulatorRangeProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccumulatorRangeProof.Unmarshal(m, b)
}
func (m *AccumulatorRangeProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccumulatorRangeProof.Marshal(b, m, deterministic)
}
func (m *AccumulatorRangeProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccumulatorRangeProof.Merge(m, src)
}
func (m *AccumulatorRangeProof) XXX_Size() int {
	return xxx_messageInfo_AccumulatorRangeProof.Size(m)
}
func (m *AccumulatorRangeProof) XXX_DiscardUnknown() {
	xxx_messageInfo_AccumulatorRangeProof.DiscardUnknown(m)
}

var xxx_messageInfo_AccumulatorRangeProof proto.InternalMessageInfo

func (m *AccumulatorRangeProof) GetLeftSiblings() [][]byte {
	if m != nil {
		return m.LeftSiblings
	}
	return nil
}

func (m *AccumulatorRangeProof) GetRightSiblings() [][]byte {
	if m != nil {
		return m.RightSiblings
	}
	return nil
}

type SparseMerkleRangeProof struct {
	// The siblings on the right of the path from root to the last leaf. The ones
	// near the leaf are at the beginning of the list. The placeholder nodes are
	// represented by empty byte arrays, other nodes should be exactly 32-bytes
	// long.
	RightSiblings        [][]byte `protobuf:"bytes,1,rep,name=right_siblings,json=rightSiblings,proto3" json:"right_siblings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SparseMerkleRangeProof) Reset()         { *m = SparseMerkleRangeProof{} }
func (m *SparseMerkleRangeProof) String() string { return proto.CompactTextString(m) }
func (*SparseMerkleRangeProof) ProtoMessage()    {}
func (*SparseMerkleRangeProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf31625cfde882c, []int{4}
}

func (m *SparseMerkleRangeProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SparseMerkleRangeProof.Unmarshal(m, b)
}
func (m *SparseMerkleRangeProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SparseMerkleRangeProof.Marshal(b, m, deterministic)
}
func (m *SparseMerkleRangeProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SparseMerkleRangeProof.Merge(m, src)
}
func (m *SparseMerkleRangeProof) XXX_Size() int {
	return xxx_messageInfo_SparseMerkleRangeProof.Size(m)
}
func (m *SparseMerkleRangeProof) XXX_DiscardUnknown() {
	xxx_messageInfo_SparseMerkleRangeProof.DiscardUnknown(m)
}

var xxx_messageInfo_SparseMerkleRangeProof proto.InternalMessageInfo

func (m *SparseMerkleRangeProof) GetRightSiblings() [][]byte {
	if m != nil {
		return m.RightSiblings
	}
	return nil
}

// The complete proof used to authenticate a transaction.
type TransactionProof struct {
	LedgerInfoToTransactionInfoProof *AccumulatorProof `protobuf:"bytes,1,opt,name=ledger_info_to_transaction_info_proof,json=ledgerInfoToTransactionInfoProof,proto3" json:"ledger_info_to_transaction_info_proof,omitempty"`
	TransactionInfo                  *TransactionInfo  `protobuf:"bytes,2,opt,name=transaction_info,json=transactionInfo,proto3" json:"transaction_info,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}          `json:"-"`
	XXX_unrecognized                 []byte            `json:"-"`
	XXX_sizecache                    int32             `json:"-"`
}

func (m *TransactionProof) Reset()         { *m = TransactionProof{} }
func (m *TransactionProof) String() string { return proto.CompactTextString(m) }
func (*TransactionProof) ProtoMessage()    {}
func (*TransactionProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf31625cfde882c, []int{5}
}

func (m *TransactionProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionProof.Unmarshal(m, b)
}
func (m *TransactionProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionProof.Marshal(b, m, deterministic)
}
func (m *TransactionProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionProof.Merge(m, src)
}
func (m *TransactionProof) XXX_Size() int {
	return xxx_messageInfo_TransactionProof.Size(m)
}
func (m *TransactionProof) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionProof.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionProof proto.InternalMessageInfo

func (m *TransactionProof) GetLedgerInfoToTransactionInfoProof() *AccumulatorProof {
	if m != nil {
		return m.LedgerInfoToTransactionInfoProof
	}
	return nil
}

func (m *TransactionProof) GetTransactionInfo() *TransactionInfo {
	if m != nil {
		return m.TransactionInfo
	}
	return nil
}

// The complete proof used to authenticate an account state.
type AccountStateProof struct {
	LedgerInfoToTransactionInfoProof *AccumulatorProof  `protobuf:"bytes,1,opt,name=ledger_info_to_transaction_info_proof,json=ledgerInfoToTransactionInfoProof,proto3" json:"ledger_info_to_transaction_info_proof,omitempty"`
	TransactionInfo                  *TransactionInfo   `protobuf:"bytes,2,opt,name=transaction_info,json=transactionInfo,proto3" json:"transaction_info,omitempty"`
	TransactionInfoToAccountProof    *SparseMerkleProof `protobuf:"bytes,3,opt,name=transaction_info_to_account_proof,json=transactionInfoToAccountProof,proto3" json:"transaction_info_to_account_proof,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}           `json:"-"`
	XXX_unrecognized                 []byte             `json:"-"`
	XXX_sizecache                    int32              `json:"-"`
}

func (m *AccountStateProof) Reset()         { *m = AccountStateProof{} }
func (m *AccountStateProof) String() string { return proto.CompactTextString(m) }
func (*AccountStateProof) ProtoMessage()    {}
func (*AccountStateProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf31625cfde882c, []int{6}
}

func (m *AccountStateProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountStateProof.Unmarshal(m, b)
}
func (m *AccountStateProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountStateProof.Marshal(b, m, deterministic)
}
func (m *AccountStateProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountStateProof.Merge(m, src)
}
func (m *AccountStateProof) XXX_Size() int {
	return xxx_messageInfo_AccountStateProof.Size(m)
}
func (m *AccountStateProof) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountStateProof.DiscardUnknown(m)
}

var xxx_messageInfo_AccountStateProof proto.InternalMessageInfo

func (m *AccountStateProof) GetLedgerInfoToTransactionInfoProof() *AccumulatorProof {
	if m != nil {
		return m.LedgerInfoToTransactionInfoProof
	}
	return nil
}

func (m *AccountStateProof) GetTransactionInfo() *TransactionInfo {
	if m != nil {
		return m.TransactionInfo
	}
	return nil
}

func (m *AccountStateProof) GetTransactionInfoToAccountProof() *SparseMerkleProof {
	if m != nil {
		return m.TransactionInfoToAccountProof
	}
	return nil
}

// The complete proof used to authenticate an event.
type EventProof struct {
	LedgerInfoToTransactionInfoProof *AccumulatorProof `protobuf:"bytes,1,opt,name=ledger_info_to_transaction_info_proof,json=ledgerInfoToTransactionInfoProof,proto3" json:"ledger_info_to_transaction_info_proof,omitempty"`
	TransactionInfo                  *TransactionInfo  `protobuf:"bytes,2,opt,name=transaction_info,json=transactionInfo,proto3" json:"transaction_info,omitempty"`
	TransactionInfoToEventProof      *AccumulatorProof `protobuf:"bytes,3,opt,name=transaction_info_to_event_proof,json=transactionInfoToEventProof,proto3" json:"transaction_info_to_event_proof,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}          `json:"-"`
	XXX_unrecognized                 []byte            `json:"-"`
	XXX_sizecache                    int32             `json:"-"`
}

func (m *EventProof) Reset()         { *m = EventProof{} }
func (m *EventProof) String() string { return proto.CompactTextString(m) }
func (*EventProof) ProtoMessage()    {}
func (*EventProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf31625cfde882c, []int{7}
}

func (m *EventProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventProof.Unmarshal(m, b)
}
func (m *EventProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventProof.Marshal(b, m, deterministic)
}
func (m *EventProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventProof.Merge(m, src)
}
func (m *EventProof) XXX_Size() int {
	return xxx_messageInfo_EventProof.Size(m)
}
func (m *EventProof) XXX_DiscardUnknown() {
	xxx_messageInfo_EventProof.DiscardUnknown(m)
}

var xxx_messageInfo_EventProof proto.InternalMessageInfo

func (m *EventProof) GetLedgerInfoToTransactionInfoProof() *AccumulatorProof {
	if m != nil {
		return m.LedgerInfoToTransactionInfoProof
	}
	return nil
}

func (m *EventProof) GetTransactionInfo() *TransactionInfo {
	if m != nil {
		return m.TransactionInfo
	}
	return nil
}

func (m *EventProof) GetTransactionInfoToEventProof() *AccumulatorProof {
	if m != nil {
		return m.TransactionInfoToEventProof
	}
	return nil
}

// The complete proof used to authenticate a list of transactions.
type TransactionListProof struct {
	LedgerInfoToTransactionInfosProof *AccumulatorRangeProof `protobuf:"bytes,1,opt,name=ledger_info_to_transaction_infos_proof,json=ledgerInfoToTransactionInfosProof,proto3" json:"ledger_info_to_transaction_infos_proof,omitempty"`
	TransactionInfos                  []*TransactionInfo     `protobuf:"bytes,2,rep,name=transaction_infos,json=transactionInfos,proto3" json:"transaction_infos,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}               `json:"-"`
	XXX_unrecognized                  []byte                 `json:"-"`
	XXX_sizecache                     int32                  `json:"-"`
}

func (m *TransactionListProof) Reset()         { *m = TransactionListProof{} }
func (m *TransactionListProof) String() string { return proto.CompactTextString(m) }
func (*TransactionListProof) ProtoMessage()    {}
func (*TransactionListProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbf31625cfde882c, []int{8}
}

func (m *TransactionListProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionListProof.Unmarshal(m, b)
}
func (m *TransactionListProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionListProof.Marshal(b, m, deterministic)
}
func (m *TransactionListProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionListProof.Merge(m, src)
}
func (m *TransactionListProof) XXX_Size() int {
	return xxx_messageInfo_TransactionListProof.Size(m)
}
func (m *TransactionListProof) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionListProof.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionListProof proto.InternalMessageInfo

func (m *TransactionListProof) GetLedgerInfoToTransactionInfosProof() *AccumulatorRangeProof {
	if m != nil {
		return m.LedgerInfoToTransactionInfosProof
	}
	return nil
}

func (m *TransactionListProof) GetTransactionInfos() []*TransactionInfo {
	if m != nil {
		return m.TransactionInfos
	}
	return nil
}

func init() {
	proto.RegisterType((*AccumulatorProof)(nil), "types.AccumulatorProof")
	proto.RegisterType((*SparseMerkleProof)(nil), "types.SparseMerkleProof")
	proto.RegisterType((*AccumulatorConsistencyProof)(nil), "types.AccumulatorConsistencyProof")
	proto.RegisterType((*AccumulatorRangeProof)(nil), "types.AccumulatorRangeProof")
	proto.RegisterType((*SparseMerkleRangeProof)(nil), "types.SparseMerkleRangeProof")
	proto.RegisterType((*TransactionProof)(nil), "types.TransactionProof")
	proto.RegisterType((*AccountStateProof)(nil), "types.AccountStateProof")
	proto.RegisterType((*EventProof)(nil), "types.EventProof")
	proto.RegisterType((*TransactionListProof)(nil), "types.TransactionListProof")
}

func init() { proto.RegisterFile("types/proof.proto", fileDescriptor_cbf31625cfde882c) }

var fileDescriptor_cbf31625cfde882c = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x94, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0x95, 0x0e, 0x10, 0x3a, 0x3a, 0x68, 0x23, 0x18, 0xd5, 0x36, 0x44, 0x17, 0x34, 0xb4,
	0x97, 0xa5, 0xd2, 0xe0, 0x85, 0x27, 0x54, 0x2a, 0x1e, 0x90, 0x40, 0x42, 0x69, 0x9f, 0x90, 0x50,
	0xe4, 0x78, 0x4e, 0x6a, 0x2d, 0xf3, 0x45, 0xb6, 0x83, 0xb4, 0x6f, 0xc2, 0x07, 0xe0, 0x7b, 0xf0,
	0x05, 0xf8, 0x50, 0xa8, 0xb6, 0x47, 0x12, 0x67, 0x63, 0xcf, 0x7d, 0xcb, 0x9d, 0x7d, 0xff, 0xff,
	0xdd, 0xef, 0xea, 0xc2, 0x58, 0x5f, 0x55, 0x4c, 0xcd, 0x2a, 0x89, 0x98, 0xc7, 0x95, 0x44, 0x8d,
	0xe1, 0x7d, 0x93, 0xda, 0x3f, 0xb4, 0x27, 0x5a, 0x12, 0xa1, 0x08, 0xd5, 0x1c, 0x45, 0xca, 0x45,
	0x8e, 0xf6, 0x52, 0x14, 0xc3, 0x68, 0x4e, 0x69, 0x7d, 0x59, 0x97, 0x44, 0xa3, 0xfc, 0xba, 0x29,
	0x0f, 0xf7, 0xe1, 0xa1, 0xe2, 0x59, 0xc9, 0x45, 0xa1, 0x26, 0xc1, 0x74, 0xe7, 0x64, 0x98, 0xfc,
	0x8b, 0xa3, 0x05, 0x8c, 0x97, 0x15, 0x91, 0x8a, 0x7d, 0x61, 0xf2, 0xa2, 0x64, 0xb6, 0x20, 0x84,
	0x7b, 0x25, 0x23, 0xf9, 0x24, 0x98, 0x06, 0x27, 0xc3, 0xc4, 0x7c, 0x77, 0x44, 0x06, 0x9e, 0xc8,
	0x3b, 0x38, 0x68, 0x99, 0x2e, 0x50, 0x28, 0xae, 0x34, 0x13, 0xf4, 0xaa, 0xf1, 0xaf, 0x33, 0x2d,
	0x19, 0x6b, 0xfc, 0x5d, 0x1c, 0x51, 0x78, 0xd6, 0x2a, 0x4d, 0x88, 0x28, 0x5c, 0x0f, 0xaf, 0x60,
	0xb7, 0x64, 0xb9, 0x4e, 0xbd, 0xce, 0x87, 0x9b, 0xe4, 0xd2, 0xe5, 0xc2, 0x63, 0x78, 0x2c, 0x79,
	0xb1, 0x6e, 0xdd, 0xb2, 0xad, 0xed, 0x9a, 0xec, 0xf5, 0xb5, 0xe8, 0x3d, 0xec, 0xb5, 0x87, 0x6c,
	0xb9, 0xf4, 0x05, 0x82, 0x9b, 0x04, 0x7e, 0x07, 0x30, 0x5a, 0x35, 0xc0, 0x6d, 0xed, 0x1a, 0x8e,
	0x4b, 0x76, 0x5e, 0x30, 0x69, 0xf8, 0xa7, 0x1a, 0x53, 0x7f, 0x27, 0xa9, 0x59, 0x9f, 0xc1, 0xf8,
	0xe8, 0xec, 0x79, 0x6c, 0x16, 0x17, 0xfb, 0xeb, 0x49, 0xa6, 0x56, 0xe5, 0x93, 0xc8, 0x71, 0x85,
	0x2d, 0x97, 0x4d, 0xc2, 0x3a, 0xcd, 0x61, 0xe4, 0x4b, 0x4f, 0x06, 0x46, 0x74, 0xcf, 0x89, 0x7a,
	0x65, 0xc9, 0x13, 0xdd, 0x4d, 0x44, 0xbf, 0x06, 0x30, 0x9e, 0x53, 0x8a, 0xb5, 0xd0, 0x4b, 0x4d,
	0x34, 0xdb, 0xbe, 0x11, 0xc2, 0x0c, 0x8e, 0x7a, 0xdd, 0x69, 0x4c, 0x89, 0x9d, 0xca, 0x35, 0xba,
	0x63, 0x34, 0x27, 0x4e, 0xb3, 0xf7, 0xd3, 0x4e, 0x5e, 0x78, 0xaa, 0x2b, 0x74, 0x54, 0xcc, 0x71,
	0xf4, 0x73, 0x00, 0xf0, 0xf1, 0x07, 0x73, 0xe1, 0x76, 0xf1, 0xf9, 0x0e, 0x2f, 0x6f, 0xe2, 0xc3,
	0x36, 0xe3, 0x74, 0xe8, 0xdc, 0xda, 0xe6, 0x41, 0x0f, 0x4e, 0xc3, 0x22, 0xfa, 0x13, 0xc0, 0xd3,
	0x56, 0x0f, 0x9f, 0xb9, 0x72, 0x90, 0x10, 0x5e, 0xdf, 0x01, 0x49, 0x75, 0x28, 0x1d, 0xf6, 0xed,
	0x9b, 0x17, 0x99, 0x1c, 0xfd, 0x07, 0x95, 0xb2, 0x86, 0x0b, 0x18, 0xf7, 0x1c, 0xcc, 0xc3, 0xbf,
	0x1d, 0xd6, 0xc8, 0x9b, 0x4c, 0x7d, 0x78, 0xfb, 0xed, 0xac, 0xe0, 0x7a, 0x5d, 0x67, 0x31, 0xc5,
	0xcb, 0x59, 0xc9, 0x33, 0x49, 0x4e, 0x15, 0x2f, 0xd4, 0xf5, 0xe7, 0xf9, 0xc5, 0x69, 0x81, 0x36,
	0x98, 0xc9, 0x8a, 0xce, 0x8c, 0x6e, 0xf6, 0xc0, 0xfc, 0xcb, 0xbe, 0xf9, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0xb0, 0xdb, 0xef, 0xc2, 0x9f, 0x05, 0x00, 0x00,
}
